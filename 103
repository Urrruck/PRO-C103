from distutils import extension
from fileinput import filename
from multiprocessing.sharedctypes import Value
from reprlib import recursive_repr
import sys
import time
import random
import os
import shutil

from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler

from_dir="C:/Users/bravo/Downloads"
to_dir="C:/Users/bravo/Desktop/files"

dir_tree = {
    "Image_Files": ['.jpg', '.jpeg', '.png', '.gif', '.jfif'],
    "Video_Files": ['.mpg', '.mp2', '.mpeg', '.mpe', '.mpv', '.mp4', '.m4p', '.m4v', '.avi', '.mov'],
    "Document_Files": ['.ppt', '.xls', '.csv', '.pdf', '.txt'],
    "Setup_Files": ['.exe', '.bin', '.cmd', '.msi', '.dmg']
}

class FileMovementHandler(FileSystemEventHandler):
    def on_created(self,event):
        name,extension=os.path.splitext(event.src_path)
        time.sleep(1)
        for key,value in dir_tree.items():
            time.sleep(1)
            if extension in value:
                filename=os.path.basename(event.src_path)
                print("descargado "+filename)
            
                path1=from_dir+"/"+filename
                path2=to_dir+"/"+key
                path3=to_dir+"/"+key+"/"+filename

                time.sleep(1)
                if os.path.exists(path2):
                    print("el directorio existe...")
                    time.sleep(1)

                    if os.path.exists(path3):
                        print(" existe en " + key+"...")
                        print(" renombrando archivo " + filename+"...")
                        new_filename = os.path.splitext(filename)[0]+str(random.randint(0,199))+os.path.splitext(filename)[1]
                        path4=to_dir+"/"+key+"/"+new_filename
                        print(" moviendo " + new_filename+"...")
                        shutil.move(path1,path4)
                        time.sleep(1)
                    else:
                        print(" moviendo " + filename+"...")
                        shutil.move(path1,path3)
                        time.sleep(1)

                else:
                    print("creando directorio")    
                    os.makedirs(path2)
                    print(" moviendo " + filename+"...")
                    shutil.move(path1,path3)
                    time.sleep(1)

event_handler=FileMovementHandler()
observer=Observer()
observer.schedule(event_handler,from_dir,recursive=True)
observer.start()

try:
    while True:
        time.sleep(2)
        print("ejecutando...")
except KeyboardInterrupt:
    print("detenido")
    observer.stop()
